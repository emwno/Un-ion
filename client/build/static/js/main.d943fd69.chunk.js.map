{"version":3,"sources":["serviceWorker.js","components/Home/GameDetails.js","components/Home/index.js","components/Login/index.js","components/Game/index.js","index.js"],"names":["Boolean","window","location","hostname","match","GameDetails","console","log","this","props","gameList","react_default","a","createElement","map","game","i","className","key","score","timePlayed","articles","article","j","fakeNews","href","link","title","Component","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","user","logout","bind","assertThisInitialized","_this2","axios","post","then","response","status","history","push","catch","error","_this3","get","data","setState","onClick","name","undefined","games","Home_GameDetails","email","Login","onLogin","event","preventDefault","username","target","value","password","statusText","alert","id","method","onSubmit","type","placeholder","required","Game","currID","time","questionIDs","questionObjectIDs","generateRand","onAnswer","getTime","interval","setInterval","clearInterval","rand","Math","floor","random","newArray","slice","newQuestionObjectIDs","indexOf","objectId","fakeStatus","length","src","thumbnail","alt","width","route","react_router_dom","react_router","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d943fd69.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass GameDetails extends Component {\r\n  render() {\r\n    console.log(this.props.gameList);\r\n    return (\r\n      <div>\r\n        {this.props.gameList.map(function(game, i) {\r\n          return (\r\n            <div className=\"eachGame\" key={i}>\r\n              <div className=\"gameText\">\r\n                <b>Game {i + 1}</b>\r\n              </div>\r\n              <div className=\"gameText\">Score: {game.score}</div>\r\n              <div className=\"gameText\">Time played: {game.timePlayed}</div>\r\n              <div className=\"gameText\">\r\n                Articles:{\" \"}\r\n                {game.articles.map(function(article, j) {\r\n                  return (\r\n                    <div className=\"gameText\" key={j}>\r\n                      <ul>\r\n                        <li>\r\n                          {article.fakeNews && <b>Real: </b>}\r\n                          {!article.fakeNews && <b>Fake: </b>}\r\n                          <a href={article.link}>{article.title}</a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameDetails;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport GameDetails from \"./GameDetails\";\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  logout() {\r\n    axios\r\n      .post(\"http://localhost:5000/logout\", {})\r\n      .then(response => {\r\n        console.log(response.status);\r\n        this.props.history.push(\"/login\");\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:5000/login/check\").catch(error => {\r\n      console.log(\"Redirect to /login\");\r\n      this.props.history.push(\"/login\");\r\n      return;\r\n    });\r\n\r\n    axios\r\n      .get(\"http://localhost:5000/\")\r\n      .then(response => {\r\n        console.log(\"test\");\r\n        console.log(response.data);\r\n        this.setState({\r\n          user: response.data\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"logout\">\r\n          <button onClick={this.logout}>LOGOUT</button>\r\n        </div>\r\n        <div className=\"welcome\">\r\n          <h1>Welcome, {this.state.user.name}!</h1>\r\n        </div>\r\n        <div className=\"gameDetails\">\r\n          <h3 className=\"historyTitle\">Here is your game history</h3>\r\n          {this.state.user.games !== undefined && (\r\n            <GameDetails\r\n              key={this.state.user.email}\r\n              gameList={this.state.user.games}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './styles.css';\r\n\r\nclass Login extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onLogin = this.onLogin.bind(this);\r\n\t}\r\n\r\n\tonLogin(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\taxios\r\n\t\t\t.post('http://localhost:5000/login', {\r\n\t\t\t\tusername: event.target.username.value,\r\n\t\t\t\tpassword: event.target.password.value\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log('Login: ' + response.statusText);\r\n\t\t\t\tthis.props.history.push('/');\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log('Login ' + error);\r\n\t\t\t\talert('Login Unsuccessful');\r\n\t\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\taxios.get('http://localhost:5000/login/check').then(response => {\r\n\t\t\tconsole.log('Logged In: Redirect to /');\r\n\t\t\tthis.props.history.push('/');\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id='login-main'>\r\n\t\t\t\t<form method='post' onSubmit={this.onLogin}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\tplaceholder='Username'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type='submit'>Login</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currID: -1,\r\n      time: 60,\r\n      timePlayed: 0,\r\n      score: 0,\r\n      questionIDs: [],\r\n      questionObjectIDs: [],\r\n      articles: {}\r\n    };\r\n\r\n    this.generateRand = this.generateRand.bind(this);\r\n    this.onAnswer = this.onAnswer.bind(this);\r\n    this.getTime = this.getTime.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/game\")\r\n      .then(response => {\r\n        this.setState({\r\n          articles: response.data\r\n        });\r\n        console.log(\"HELLO\");\r\n        console.log(this.state.articles);\r\n        console.log(this.state.articles[0].title);\r\n\r\n        // first ID\r\n        this.generateRand();\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n\r\n    this.interval = setInterval(\r\n      () =>\r\n        this.setState({\r\n          time: this.state.time - 1,\r\n          timePlayed: this.state.timePlayed + 1\r\n        }),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  //   generate random number and update values\r\n  generateRand() {\r\n    let rand = Math.floor(Math.random() * 100);\r\n    var newArray = this.state.questionIDs.slice();\r\n    var newQuestionObjectIDs = this.state.questionObjectIDs.slice();\r\n\r\n    while (newArray.indexOf(rand) !== -1) {\r\n      rand = Math.floor(Math.random() * 100);\r\n    }\r\n\r\n    newArray.push(rand);\r\n    newQuestionObjectIDs.push(this.state.articles[rand].objectId);\r\n\r\n    this.setState({\r\n      currID: rand,\r\n      questionIDs: newArray,\r\n      questionObjectIDs: newQuestionObjectIDs\r\n    });\r\n  }\r\n\r\n  onAnswer(event) {\r\n    event.preventDefault();\r\n\r\n    let fakeStatus = this.state.articles[this.state.currID].fakeNews;\r\n    if (\r\n      (fakeStatus && event.target.name === \"fake\") ||\r\n      (!fakeStatus && event.target.name === \"real\")\r\n    ) {\r\n      console.log(\"Correct!\");\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n        time: this.state.time + 5\r\n      });\r\n    } else {\r\n      console.log(\"Wrong\");\r\n      this.setState({\r\n        time: this.state.time - 10\r\n      });\r\n    }\r\n    this.generateRand();\r\n  }\r\n\r\n  getTime() {\r\n    if (this.state.time >= 0) return this.state.time;\r\n    else {\r\n      clearInterval(this.interval);\r\n      axios\r\n        .post(\"http://localhost:5000/game/save\", {\r\n          score: this.state.score,\r\n          timePlayed: this.state.timePlayed,\r\n          articles: this.state.questionObjectIDs\r\n        })\r\n        .then(function(response) {\r\n          console.log(response);\r\n        })\r\n        .catch(function(error) {\r\n          console.log(error);\r\n        });\r\n      this.props.history.push(\"/\");\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <h1>{this.getTime()}</h1>\r\n        <div className=\"thumbnail\">\r\n          {this.state.articles.length > 0 && this.state.currID > -1 && (\r\n            <img\r\n              src={this.state.articles[this.state.currID].thumbnail}\r\n              alt=\"Article thumbnail\"\r\n              width=\"320px\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"titleQuestion\">\r\n          <h2>\r\n            {this.state.articles.length > 0 &&\r\n              this.state.currID > -1 &&\r\n              this.state.articles[this.state.currID].title}\r\n          </h2>\r\n          <h2>Is this fake news?</h2>\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"yesButton\"\r\n            name=\"fake\"\r\n            onClick={this.onAnswer}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"noButton\"\r\n            name=\"real\"\r\n            onClick={this.onAnswer}\r\n          >\r\n            No\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Home from './components/Home';\r\nimport Login from './components/Login';\r\nimport Game from './components/Game';\r\n\r\nconst route = (\r\n\t<Router>\r\n\t\t<div>\r\n\t\t\t<Route exact path='/' component={Home} />\r\n\t\t\t<Route path='/login' component={Login} />\r\n\t\t\t<Route path='/game' component={Game} />\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\nReactDOM.render(route, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}