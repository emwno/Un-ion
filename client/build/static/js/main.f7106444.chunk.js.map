{"version":3,"sources":["serviceWorker.js","components/Home/GameDetails.js","components/Home/index.js","components/Login/index.js","components/Game/index.js","index.js"],"names":["Boolean","window","location","hostname","match","GameDetails","console","log","this","props","gameList","react_default","a","createElement","map","game","i","className","key","score","timePlayed","articles","article","j","fakeNews","href","link","title","Component","serverURL","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","user","logout","bind","assertThisInitialized","history","push","_this2","axios","post","then","response","status","catch","error","_this3","get","getUser","redirect","_this4","data","setState","onClick","class","name","undefined","games","Home_GameDetails","email","Login","onLogin","event","preventDefault","username","target","value","password","statusText","alert","method","onSubmit","type","placeholder","required","Game","currID","time","questionIDs","questionObjectIDs","color","generateRand","onAnswer","getTime","interval","setInterval","clearInterval","rand","Math","floor","random","newArray","slice","newQuestionObjectIDs","indexOf","objectId","fakeStatus","src","style","length","thumbnail","alt","width","route","react_router_dom","react_router","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7106444.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nclass GameDetails extends Component {\r\n  render() {\r\n    console.log(this.props.gameList);\r\n    return (\r\n      <div>\r\n        {this.props.gameList.map(function(game, i) {\r\n          return (\r\n            <div className=\"eachGame\" key={i}>\r\n              <div className=\"box\">\r\n              <b>Game {i + 1}</b>\r\n              </div>\r\n              <div className=\"gameText\"><b>Score: {game.score}</b></div>\r\n              <div className=\"gameText\">Time played: {game.timePlayed}</div>\r\n              <div className=\"gameText\">\r\n                Articles:{\" \"}\r\n                {game.articles.map(function(article, j) {\r\n                  return (\r\n                    <div className=\"gameText\" key={j}>\r\n                      <ul>\r\n                        <li>\r\n                          {article.fakeNews && <b>Real: </b>}\r\n                          {!article.fakeNews && <b>Fake: </b>}\r\n                          <a href={article.link}>{article.title}</a>\r\n                        </li>\r\n                      </ul>\r\n                      \r\n                    </div>\r\n              \r\n                  );\r\n                })}\r\n            {/* <hr></hr> */}\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameDetails;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport GameDetails from \"./GameDetails\";\r\n//import 'semantic-ui-css/semantic.min.css'\r\n\r\nimport \"./styles.css\";\r\n\r\nvar serverURL = \"https://un-ion-server.herokuapp.com/\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.game = this.game.bind(this);\r\n  }\r\n\r\n  game() {\r\n    this.props.history.push(\"/game\");\r\n  }\r\n\r\n  logout() {\r\n    axios\r\n      .post(serverURL+ \"logout\", {})\r\n      .then(response => {\r\n        console.log(response.status);\r\n        this.props.history.push(\"/login\");\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(serverURL+ \"login/check\")\r\n      .then(response => {\r\n        this.getUser();\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Redirect to /login\");\r\n        this.props.history.push(\"/login\");\r\n        return;\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.redirect) {\r\n      this.getUser();\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    axios\r\n      .get(serverURL)\r\n      .then(response => {\r\n        console.log(\"test\");\r\n        console.log(response.data);\r\n        this.setState({\r\n          user: response.data\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n          <div >\r\n            <button className=\"logout\" onClick={this.logout}>\r\n              LOGOUT\r\n            </button>\r\n          </div>\r\n          <div className=\"welcome\">\r\n            <h1 class=\"title1\">Welcome, {this.state.user.name}!</h1>\r\n          </div>\r\n\r\n          <div class=\"playGame\">\r\n            <button className=\"play\" onClick={this.game}>\r\n              Play Game\r\n            </button>\r\n            <hr className=\"hBreak\"/>\r\n          </div>\r\n        </div>\r\n        \r\n\r\n        <div className=\"gameDetails\">\r\n          <h3 className=\"history\">Game History </h3>\r\n          <hr></hr>\r\n          {this.state.user.games !== undefined && (\r\n            <GameDetails\r\n              key={this.state.user.email}\r\n              gameList={this.state.user.games}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\n\r\nvar serverURL = \"https://un-ion-server.herokuapp.com/\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onLogin = this.onLogin.bind(this);\r\n  }\r\n\r\n  onLogin(event) {\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .post(serverURL+ \"login\", {\r\n        username: event.target.username.value,\r\n        password: event.target.password.value\r\n      })\r\n      .then(response => {\r\n        console.log(\"Login: \" + response.statusText);\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Login \" + error);\r\n        alert(\"Login Unsuccessful\");\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(serverURL+ \"login/check\").then(response => {\r\n      console.log(\"Logged In: Redirect to /\");\r\n      this.props.history.push(\"/\");\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"page-login\">\r\n        <h1 class=\"title\">Un-ion</h1>\r\n        <div class=\"ui centered grid container\" >\r\n          <div class=\"nine wide column\">\r\n            <div class=\"ui fluid card\">\r\n              <div class=\"content\">\r\n                <form class=\"ui form\" method=\"POST\" onSubmit={this.onLogin}>\r\n                  <div class=\"field\">\r\n                    <label>User</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      placeholder=\"Username\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div class=\"field\">\r\n                    <label>Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <button class=\"ui primary labeled icon button\" type=\"submit\">\r\n                    <i class=\"unlock alternate icon\" />\r\n                    Login\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\n\r\nvar serverURL = \"https://un-ion-server.herokuapp.com/\";\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currID: -1,\r\n      time: 6000,\r\n      timePlayed: 0,\r\n      score: 0,\r\n      questionIDs: [],\r\n      questionObjectIDs: [],\r\n      articles: {},\r\n      color: \"black\"\r\n    };\r\n\r\n    this.generateRand = this.generateRand.bind(this);\r\n    this.onAnswer = this.onAnswer.bind(this);\r\n    this.getTime = this.getTime.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(serverURL+ \"game\")\r\n      .then(response => {\r\n        this.setState({\r\n          articles: response.data\r\n        });\r\n        console.log(\"HELLO\");\r\n        console.log(this.state.articles);\r\n        console.log(this.state.articles[0].title);\r\n\r\n        // first ID\r\n        this.generateRand();\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n\r\n    this.interval = setInterval(\r\n      () =>\r\n        this.setState({\r\n          time: this.state.time - 1,\r\n          timePlayed: this.state.timePlayed + 1,\r\n          color: \"black\"\r\n        }),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  //   generate random number and update values\r\n  generateRand() {\r\n    let rand = Math.floor(Math.random() * 100);\r\n    var newArray = this.state.questionIDs.slice();\r\n    var newQuestionObjectIDs = this.state.questionObjectIDs.slice();\r\n\r\n    while (newArray.indexOf(rand) !== -1) {\r\n      rand = Math.floor(Math.random() * 100);\r\n    }\r\n\r\n    newArray.push(rand);\r\n    newQuestionObjectIDs.push(this.state.articles[rand].objectId);\r\n\r\n    this.setState({\r\n      currID: rand,\r\n      questionIDs: newArray,\r\n      questionObjectIDs: newQuestionObjectIDs\r\n    });\r\n  }\r\n\r\n  onAnswer(event) {\r\n    event.preventDefault();\r\n\r\n    let fakeStatus = this.state.articles[this.state.currID].fakeNews;\r\n    if (\r\n      (fakeStatus && event.target.name === \"fake\") ||\r\n      (!fakeStatus && event.target.name === \"real\")\r\n    ) {\r\n      console.log(\"Correct!\");\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n        time: this.state.time + 5,\r\n        color: \"green\"\r\n      });\r\n    } else {\r\n      console.log(\"Wrong\");\r\n      this.setState({\r\n        time: this.state.time - 10,\r\n        color: \"red\"\r\n      });\r\n    }\r\n    this.generateRand();\r\n  }\r\n\r\n  getTime() {\r\n    if (this.state.time >= 0) return this.state.time;\r\n    else {\r\n      clearInterval(this.interval);\r\n      axios\r\n        .post(serverURL + \"game/save\", {\r\n          score: this.state.score,\r\n          timePlayed: this.state.timePlayed,\r\n          articles: this.state.questionObjectIDs\r\n        })\r\n        .then(response => {\r\n          console.log(response);\r\n          this.props.history.push(\"/\");\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          this.props.history.push(\"/\");\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div class=\"ui header\">\r\n        <img className = \"img\" src=\"https://img.icons8.com/color/48/000000/time.png\"></img>\r\n        <div class=\"content\"><h1 className=\"time\" style={{color: this.state.color}}>{this.getTime()}</h1></div>\r\n        </div>\r\n        <div className=\"details\">\r\n          <div className=\"thumbnail\">\r\n            {this.state.articles.length > 0 && this.state.currID > -1 && (\r\n              <img className=\"image\"\r\n                src={this.state.articles[this.state.currID].thumbnail}\r\n                alt=\"Article thumbnail\"\r\n                width=\"600\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"titleQuestion\">\r\n            <h2>\r\n              {this.state.articles.length > 0 &&\r\n                this.state.currID > -1 &&\r\n                this.state.articles[this.state.currID].title}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"realButton\"\r\n            class=\"positive ui button\"\r\n            name=\"real\"\r\n            onClick={this.onAnswer}\r\n          >\r\n            Real\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"fakeButton\"\r\n            class=\"negative ui button\"\r\n            name=\"fake\"\r\n            onClick={this.onAnswer}\r\n          >\r\n            Fake\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Home from './components/Home';\r\nimport Login from './components/Login';\r\nimport Game from './components/Game';\r\n\r\nconst route = (\r\n\t<Router>\r\n\t\t<div>\r\n\t\t\t<Route exact path='/' component={Home} />\r\n\t\t\t<Route path='/login' component={Login} />\r\n\t\t\t<Route path='/game' component={Game} />\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\nReactDOM.render(route, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}